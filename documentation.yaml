openapi: 3.0.0
paths:
  /api/products:
    get:
      summary: Returns a list of all products available in the store.
      description: Returns a list of all products available in the store.
    post:
      summary: Creates a new product in the store.
      description: Creates a new product in the store.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                price:
                  type: number
              required:
                - product_name
                - price
  /api/users:
    get:
      summary: Returns a list of all users registered with the system.
      description: Returns a list of all users registered with the system.
    post:
      summary: Creates a new user account in the system.
      description: Creates a new user account in the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
  /api/users/{userId}:
    get:
      summary: Returns a specific user's details.
      description: Returns a specific user's details.
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
    put:
      summary: Updates a specific user's details.
      description: Updates a specific user's details.
      parameters:
        - in: path
          name: userId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
  /api/products/{productId}:
    get:
      summary: Returns a specific product's details.
      description: Returns a specific product's details.
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
    put:
      summary: Updates a specific product's details.
      description: Updates a specific product's details.
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                price:
                  type: number
              required:
                - product_name
                - price
    delete:
      summary: Deletes a specific product from the store.
      description: Deletes a specific product from the store.
      parameters:
        - in: path
          name: productId
          schema:
            type: integer
          required: true
  /api/login:
    post:
      summary: Logs in a user and returns an authentication token.
      description: Logs in a user and returns an authentication token.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
  /api/logout:
    post:
      summary: Logs out the currently authenticated user.
      description: Logs out the currently authenticated user.
  /api/me:
    get:
      summary: Returns information about the currently authenticated user.
      description: Returns information about the currently authenticated user.
  /products:
    get:
      summary: Retrieve a list of products filtered by category and price range.
      description: Retrieve a list of products filtered by category and price range.
      parameters:
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
      responses:
        '201':
          $ref: '#/components/responses/201Created'
      tags:
        - Products
    post:
      summary: Create a new product.
      description: Create a new product.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          $ref: '#/components/responses/201Created'
        '400':
          $ref: '#/components/responses/400BadRequest'
      tags:
        - Products
  /products/{id}:
    get:
      summary: Retrieve a product by its ID.
      description: Retrieve a product by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          $ref: '#/components/responses/200OK'
        '404':
          $ref: '#/components/responses/404NotFound'
      tags:
        - Products
    put:
      summary: Update a product by its ID.
      description: Update a product by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          $ref: '#/components/responses/200OK'
        '404':
          $ref: '#/components/responses/404NotFound'
      tags:
        - Products
    delete:
      summary: Delete a product by its ID.
      description: Delete a product by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          $ref: '#/components/responses/200OK'
        '404':
          $ref: '#/components/responses/404NotFound'
      tags:
        - Products
  /register:
    post:
      summary: Registers a new user with the system.
      description: Registers a new user with the system.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '201':
          description: User registered successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  orders:
                    type: array
                  cart:
                    type: array
      tags:
        - Users
  /:id:
    get:
      summary: Retrieves the profile information of a user.
      description: Retrieves the profile information of a user.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: User profile retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
      tags:
        - Users
  /:id/cart:
    post:
      summary: Adds an item to a user's cart.
      description: Adds an item to a user's cart.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: number
              required:
                - productId
      responses:
        '201':
          description: Item added to cart successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                    quantity:
                      type: number
      tags:
        - Users
  /:id/checkout:
    post:
      summary: Creates a new order for a user after they have completed shopping.
      description: Creates a new order for a user after they have completed shopping.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: number
              required:
                - productId
      responses:
        '201':
          description: Order created successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: string
                        quantity:
                          type: number
                  date:
                    type: string
                    format: date-time
                  total:
                    type: number
      tags:
        - Users
  /:id/orders:
    get:
      summary: Retrieves all the orders of a user.
      description: Retrieves all the orders of a user.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Orders retrieved successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    items:
                      type: array
                      items:
                        type: object
                        properties:
                          productId:
                            type: string
                          quantity:
                            type: number
                    date:
                      type: string
                      format: date-time
                    total:
                      type: number
      tags:
        - Users
components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
      required:
        - id
        - name
        - price
    Error:
      type: object
      properties:
        message:
          type: string
  responses:
    200OK:
      description: Product retrieved successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    201Created:
      description: Product created successfully.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Product'
    400BadRequest:
      description: Invalid request parameters.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    404NotFound:
      description: Product not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

