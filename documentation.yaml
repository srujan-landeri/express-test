openapi: 3.0.0
info:
  title: E-Commerce Platform API
  version: v1
paths:
  /api/products:
    get:
      summary: Retrieve a list of all products
      tags:
        - Products
      responses:
        '200':
          description: A list of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /api/users:
    get:
      summary: Retrieve a list of all users
      tags:
        - Users
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /products:
    get:
      summary: Retrieve a list of products with optional filtering by category and price range.
      tags:
        - products
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Product category filter
        - in: query
          name: minPrice
          schema:
            type: number
          description: Minimum product price filter
        - in: query
          name: maxPrice
          schema:
            type: number
          description: Maximum product price filter
      responses:
        '200':
          description: List of products matching the specified filters
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
              example:
                - id: 1
                  name: Wireless Headphones
                  description: Noise-cancelling bluetooth headphones
                  price: 199.99
                  category: Electronics
                  stock: 50
    post:
      summary: Create a new product.
      tags:
        - products
      requestBody:
        description: Product creation request body
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - price
              properties:
                stock:
                  type: integer
                category:
                  type: string
            example:
              id: 1
              name: Wireless Headphones
              description: Noise-cancelling bluetooth headphones
              price: 199.99
              stock: 50
      responses:
        '201':
          description: Created product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: 1
                name: Wireless Headphones
                description: Noise-cancelling bluetooth headphones
                price: 199.99
                category: Electronics
                stock: 50
  /products/{id}:
    get:
      summary: Retrieve product details by ID.
      tags:
        - products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: Product details by ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: 1
                name: Wireless Headphones
                description: Noise-cancelling bluetooth headphones
                price: 199.99
                category: Electronics
                stock: 50
    put:
      summary: Update product details.
      tags:
        - products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        description: Product update request body
        content:
          application/json:
            schema:
              type: object
              required:
                - stock
              properties:
                category:
                  type: string
                name:
                  type: string
            example:
              id: 1
              name: Wireless Headphones
              description: Noise-cancelling bluetooth headphones
              price: 199.99
              stock: 50
      responses:
        '200':
          description: Updated product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
              example:
                id: 1
                name: Wireless Headphones
                description: Noise-cancelling bluetooth headphones
                price: 199.99
                category: Electronics
                stock: 50
    delete:
      summary: Delete product by ID.
      tags:
        - products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '204':
          description: Product deletion confirmation
          content:
            text/plain:
              example: Product deleted successfully.
  /users:
    get:
      summary: Retrieve a list of all users with minimal information.
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
  /users/{id}:
    get:
      summary: Retrieve a user by ID, excluding sensitive information.
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /register:
    post:
      summary: Register a new user.
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistration'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SafeUser'
components:
  schemas:
    Product:
      type: object
      required:
        - id
        - name
        - price
        - category
        - stock
      properties:
        id:
          type: integer
        name:
          type: string
        price:
          type: number
        category:
          type: string
        stock:
          type: integer
    User:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    UserRegistration:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string
    SafeUser:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
        name:
          type: string
        email:
          type: string

