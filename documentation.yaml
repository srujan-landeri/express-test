openapi: 3.0.0
info:
  title: API Specification
  version: v1
paths:
  /api/products:
    get:
      summary: Retrieves a list of all products.
      tags:
        - Products
    post:
      summary: Creates a new product.
      tags:
        - Products
      parameters:
        - name: product_name
          in: query
          schema:
            type: string
        - name: product_description
          in: query
          schema:
            type: string
  /api/products/{id}:
    get:
      summary: Retrieves a single product by ID.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
    put:
      summary: Updates a product by ID.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                product_description:
                  type: string
    delete:
      summary: Deletes a product by ID.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
  /api/users:
    get:
      summary: Retrieves a list of all users.
      tags:
        - Users
    post:
      summary: Creates a new user.
      tags:
        - Users
      parameters:
        - name: username
          in: query
          schema:
            type: string
        - name: email
          in: query
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
  /api/users/{id}:
    get:
      summary: Retrieves a single user by ID.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
    put:
      summary: Updates a user by ID.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
    delete:
      summary: Deletes a user by ID.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
  /:
    get:
      summary: Returns a message with available endpoints.
      tags:
        - Root
  /products:
    get:
      summary: Retrieve a list of products matching the provided filters.
      tags:
        - Products
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: Filter products by category (e.g., 'Electronics')
        - name: minPrice
          in: query
          schema:
            type: number
          description: Minimum price filter
        - name: maxPrice
          in: query
          schema:
            type: number
          description: Maximum price filter
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/definitions/product'
        '400':
          description: Bad request response
    post:
      summary: Create a new product.
      tags:
        - Products
      parameters:
        - name: stock
          in: query
          schema:
            type: integer
          description: Initial stock quantity (optional)
        - name: price
          in: query
          schema:
            type: number
          description: Product price
      responses:
        '201':
          description: Created product response
          content:
            application/json:
              schema:
                $ref: '#/definitions/product'
        '400':
          description: Bad request response
  /products/{id}:
    get:
      summary: Retrieve a single product by its ID.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          description: Product ID
          required: true
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/definitions/product'
        '404':
          description: Product not found response
    put:
      summary: Update an existing product by its ID.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          description: Product ID
          required: true
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/definitions/product'
        '404':
          description: Product not found response
    delete:
      summary: Delete a product by its ID.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          description: Product ID
          required: true
      responses:
        '200':
          description: Success response
          content:
            application/json:
              schema:
                $ref: '#/definitions/product'
        '404':
          description: Product not found response
  /users:
    get:
      summary: Retrieves a list of all users with minimal information for security.
      tags:
        - Users
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
                  required:
                    - id
                    - username
                    - email
  /users/{id}:
    get:
      summary: Retrieves the profile of a specific user, excluding sensitive information.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: User ID
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/register:
    post:
      summary: Registers a new user with the provided information.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                  password:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/{id}/cart:
    post:
      summary: Adds a product to the cart of a specific user.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: User ID
        - name: productId
          in: body
          schema:
            type: string
          required: true
          description: Product ID
        - name: quantity
          in: body
          schema:
            type: integer
          description: Quantity
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
              required:
                - productId
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                    quantity:
                      type: integer
  /users/{id}/checkout:
    post:
      summary: Creates a new order and clears the cart of a specific user.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          required: true
          description: User ID
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  items:
                    type: array
                  date:
                    type: string
                  total:
                    type: number

definitions:
  product:
    type: object
    properties:
      id:
        type: integer
      name:
        type: string
      description:
        type: string
      price:
        type: number
      stock:
        type: integer

