openapi: 3.0.0
info:
  title: API Specification
  version: v1
paths:
  /api/products:
    get:
      summary: Retrieve a list of all products.
      tags:
        - Products
      responses:
        '200':
          description: A list of product objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Internal Server Error
    post:
      summary: Create a new product.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '201':
          description: The newly created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '400':
          description: Invalid request data
        '500':
          description: Internal Server Error
  /api/products/{id}:
    get:
      summary: Retrieve a single product by ID.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the product to retrieve
      responses:
        '200':
          description: A product object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '500':
          description: Internal Server Error
    put:
      summary: Update an existing product.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        '200':
          description: The updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found
        '400':
          description: Invalid request data
        '500':
          description: Internal Server Error
  /api/users:
    get:
      summary: Retrieve a list of all users.
      tags:
        - Users
      responses:
        '200':
          description: A list of user objects
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal Server Error
    post:
      summary: Create a new user.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: The newly created user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid request data
        '500':
          description: Internal Server Error
  /api/users/{id}:
    get:
      summary: Retrieve a single user by ID.
      tags:
        - Users
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the user to retrieve
      responses:
        '200':
          description: A user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Internal Server Error
    put:
      summary: Update an existing user.
      tags:
        - Users
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: The updated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '400':
          description: Invalid request data
        '500':
          description: Internal Server Error
    delete:
      summary: Delete a user by ID.
      tags:
        - Users
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: The ID of the user to delete
      responses:
        '204':
          description: No content
        '404':
          description: User not found
        '500':
          description: Internal Server Error
  /products:
    get:
      summary: Retrieve products by category, min price and max price.
      parameters:
        - in: query
          name: category
          schema:
            type: string
        - in: query
          name: minPrice
          schema:
            type: number
        - in: query
          name: maxPrice
          schema:
            type: number
    post:
      summary: Create a new product.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
                stock:
                  type: integer
  /products/{id}:
    get:
      summary: Retrieve a single product by its ID.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the product to retrieve
    put:
      summary: Update a product.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the product to update
      requestBody:
        content:
          application/json:
            schema:
              type: object
    delete:
      summary: Delete a product.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the product to delete
  /users:
    get:
      summary: Retrieve a list of all users with minimal information for security.
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
                  required:
                    - id
                    - username
                    - email
  /users/{id}:
    get:
      summary: Retrieve a user's profile by ID.
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the user to retrieve
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/register:
    post:
      summary: Register a new user with username, email, and password.
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/{id}/cart:
    post:
      summary: Add an item to a user's cart by ID.
      tags:
        - users
        - cart
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the user to retrieve
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                quantity:
                  type: integer
              required:
                - productId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: string
                    quantity:
                      type: integer
                  required:
                    - productId
                    - quantity
  /users/{id}/checkout:
    post:
      summary: Create a new order and checkout by ID.
      tags:
        - users
        - cart
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: The ID of the user to retrieve
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  items:
                    type: array
                  date:
                    type: string
                required:
                  - id
                  - items
components:
  schemas:
    Product:
      type: object
    User:
      type: object

