openapi: 3.0.0
paths:
  /api/products:
    get:
      summary: Retrieve a list of products
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit the number of products returned
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset for pagination
    post:
      summary: Create a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
              required:
                - name
                - price
  /api/products/{id}:
    get:
      summary: Retrieve a product by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: Product ID
          required: true
    put:
      summary: Update a product
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: Product ID
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: number
              required:
                - name
                - price
    delete:
      summary: Delete a product
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: Product ID
          required: true
  /api/users:
    get:
      summary: Retrieve a list of users
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
          description: Limit the number of users returned
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset for pagination
    post:
      summary: Create a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
  /api/users/{id}:
    get:
      summary: Retrieve a user by ID
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: User ID
          required: true
    put:
      summary: Update a user
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: User ID
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
    delete:
      summary: Delete a user
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: User ID
          required: true
  /products:
    get:
      summary: List of filtered products
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Filter products by category
        - in: query
          name: minPrice
          schema:
            type: number
          description: Minimum price filter (inclusive)
        - in: query
          name: maxPrice
          schema:
            type: number
          description: Maximum price filter (exclusive)
      responses:
        '200':
          description: List of filtered products
    post:
      summary: Created product details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Product name
                price:
                  type: number
                  description: Product price
                stock:
                  type: integer
                  description: Initial product stock
      responses:
        '201':
          description: Created product details
  /products/{id}:
    get:
      summary: Single product details
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: Product ID to retrieve
          required: true
      responses:
        '200':
          description: Single product details
    put:
      summary: Updated product details
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: Product ID to update
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Updated product name
                price:
                  type: number
                  description: Updated product price
                stock:
                  type: integer
                  description: Updated initial product stock
      responses:
        '200':
          description: Updated product details
    delete:
      summary: Deleted product details
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: Product ID to delete
          required: true
      responses:
        '200':
          description: Deleted product details
  /users:
    get:
      summary: Retrieve a list of all users with minimal information for security.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
  /users/{id}:
    get:
      summary: Retrieve a user's profile with sensitive information removed.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/register:
    post:
      summary: Register a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '201':
          description: Registered user details
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/{id}/cart:
    post:
      summary: Add an item to a user's cart.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                quantity:
                  type: integer
                  minimum: 1
              required:
                - productId
      responses:
        '200':
          description: Updated cart
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                    quantity:
                      type: integer
  /users/{id}/checkout:
    post:
      summary: Create a new order for a user's cart and clear the cart.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
              required:
                - productId
      responses:
        '201':
          description: Created order
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  items:
                    type: array
                    items:
                      type: object
                  date:
                    type: string
                  total:
                    type: number

