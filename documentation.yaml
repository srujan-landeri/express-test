openapi: 3.0.0
info:
  title: API Specification
  version: v1
paths:
  /api/products:
    get:
      summary: Returns a list of all products in the system.
      tags:
        - Products
    post:
      summary: Creates a new product in the system.
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                product_price:
                  type: number
              required:
                - product_name
                - product_price
      responses:
        '201':
          description: Product created successfully
  /api/users:
    get:
      summary: Returns a list of all users in the system.
      tags:
        - Users
    post:
      summary: Creates a new user in the system.
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '201':
          description: User created successfully
  /api/products/{product_id}:
    get:
      summary: Returns a single product by its ID.
      tags:
        - Products
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
          description: ID of the product to retrieve
    put:
      summary: Updates a product by its ID.
      tags:
        - Products
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
          description: ID of the product to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                product_name:
                  type: string
                product_price:
                  type: number
              required:
                - product_name
                - product_price
      responses:
        '200':
          description: Product updated successfully
    delete:
      summary: Deletes a product by its ID.
      tags:
        - Products
      parameters:
        - in: path
          name: product_id
          schema:
            type: integer
          required: true
          description: ID of the product to delete
      responses:
        '200':
          description: Product deleted successfully
  /api/users/{user_id}:
    get:
      summary: Returns a single user by its ID.
      tags:
        - Users
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user to retrieve
    put:
      summary: Updates a user by its ID.
      tags:
        - Users
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user to update
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: User updated successfully
    delete:
      summary: Deletes a user by its ID.
      tags:
        - Users
      parameters:
        - in: path
          name: user_id
          schema:
            type: integer
          required: true
          description: ID of the user to delete
      responses:
        '200':
          description: User deleted successfully
  /:
    get:
      summary: Returns information about the available endpoints.
      tags:
        - Info
  /products:
    get:
      summary: Retrieve a list of products. Filtering by category, minPrice and maxPrice is supported.
      tags:
        - Products
      parameters:
        - in: query
          name: category
          schema:
            type: string
          required: false
          description: Category of products to filter by
        - in: query
          name: minPrice
          schema:
            type: number
          required: false
          description: Minimum price to filter by
        - in: query
          name: maxPrice
          schema:
            type: number
          required: false
          description: Maximum price to filter by
      responses:
        '202':
          $ref: '#/responses/CreateProductResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
    post:
      summary: Create a new product.
      tags:
        - Products
      requestBody:
        $ref: '#/requestBodies/CreateProductRequest'
      responses:
        '201':
          $ref: '#/responses/CreateProductResponse'
        '400':
          $ref: '#/responses/ErrorResponse'
  /products/{id}:
    get:
      summary: Retrieve a single product by ID.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the product to retrieve
      responses:
        '200':
          $ref: '#/responses/GetProductResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
    put:
      summary: Update a product.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the product to update
      requestBody:
        $ref: '#/requestBodies/UpdateProductRequest'
      responses:
        '200':
          $ref: '#/responses/GetProductResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
    delete:
      summary: Delete a product.
      tags:
        - Products
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: ID of the product to delete
      responses:
        '200':
          $ref: '#/responses/GetProductResponse'
        '404':
          $ref: '#/responses/ErrorResponse'
  /users:
    get:
      summary: Retrieve a list of all users (minimal info for security)
      tags:
        - users
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
  /users/{id}:
    get:
      summary: Retrieve a user's profile (minimal info for security)
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Unique identifier for the user
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/register:
    post:
      summary: Create a new user account
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/{id}/cart:
    post:
      summary: Add an item to the user's cart
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Unique identifier for the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: integer
                quantity:
                  type: integer
              required:
                - productId
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                    quantity:
                      type: integer
  /users/{id}/checkout:
    post:
      summary: Initiate checkout and create a new order
      tags:
        - users
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          required: true
          description: Unique identifier for the user
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  items:
                    type: array
                    items:
                      type: object
                      properties:
                        productId:
                          type: integer
                        quantity:
                          type: integer
                  date:
                    type: string
                  total:
                    type: number
                required:
                  - id
                  - items
responses:
  CreateProductResponse:
    description: Successful product creation response
  GetProductResponse:
    description: Successful product retrieval response
  ErrorResponse:
    description: Error response
requestBodies:
  CreateProductRequest:
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
            price:
              type: number
            stock:
              type: integer
          required:
            - name
            - price
            - stock
  UpdateProductRequest:
    content:
      application/json:
        schema:
          type: object
          properties:
            name:
              type: string
            price:
              type: number
            stock:
              type: integer

