openapi: 3.0.0
paths:
  /api/products:
    get:
      summary: Retrieve a list of all products in the database.
      tags:
        - Products
    post:
      summary: Create a new product in the database.
      tags:
        - Products
      parameters:
        - name: product_name
          in: query
          required: false
        - name: price
          in: query
          required: false
  /api/users:
    get:
      summary: Retrieve a list of all users in the database.
      tags:
        - Users
    post:
      summary: Create a new user in the database.
      tags:
        - Users
      parameters:
        - name: username
          in: body
          required: true
        - name: password
          in: body
          required: true
  /api/products/{id}:
    get:
      summary: Retrieve a product by its ID from the database.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: false
    put:
      summary: Update a product by its ID in the database.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: false
    delete:
      summary: Delete a product by its ID from the database.
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: false
  /api/users/{id}:
    get:
      summary: Retrieve a user by its ID from the database.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: false
    put:
      summary: Update a user by its ID in the database.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: false
    delete:
      summary: Delete a user by its ID from the database.
      tags:
        - Users
      parameters:
        - name: id
          in: path
          required: false
  /products:
    get:
      summary: List of products that match the filters
      tags:
        - products
        - search
      parameters:
        - name: category
          in: query
          schema:
            type: string
          description: Filter by product category
        - name: minPrice
          in: query
          schema:
            type: number
          description: Minimum price filter (inclusive)
        - name: maxPrice
          in: query
          schema:
            type: number
          description: Maximum price filter (exclusive)
    post:
      summary: Created new product
      tags:
        - products
        - create
      requestBody:
        required: true
      responses:
        '200':
          description: Created new product
  /products/{id}:
    get:
      summary: Single product details
      tags:
        - products
        - details
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          description: Product ID
      responses:
        '200':
          description: Single product details
    put:
      summary: Updated product details
      tags:
        - products
        - update
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          description: Product ID
      requestBody:
        required: true
      responses:
        '200':
          description: Updated product details
    delete:
      summary: Deleted product
      tags:
        - products
        - delete
      parameters:
        - name: id
          in: path
          schema:
            type: integer
          description: Product ID
      responses:
        '200':
          description: Deleted product
  /users:
    get:
      summary: Retrieve a list of users with minimal information (id, username, email)
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    username:
                      type: string
                    email:
                      type: string
                  required:
                    - id
                    - username
                    - email
  /users/{id}:
    get:
      summary: Retrieve a user's profile with sensitive information (password) removed
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the user
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /register:
    post:
      summary: Create a new user account with basic validation and password hashing
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  username:
                    type: string
                  email:
                    type: string
                required:
                  - id
                  - username
                  - email
  /users/{id}/cart:
    post:
      summary: Add an item to a user's cart
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the user
        - name: productId
          in: body
          required: true
          description: ID of the product to add to cart
        - name: quantity
          in: body
          required: false
          description: Quantity of the product in cart (default: 1)
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    productId:
                      type: integer
                    quantity:
                      type: integer
                  required:
                    - productId
                    - quantity
  /users/{id}/checkout:
    post:
      summary: Create a new order and clear the cart
      parameters:
        - name: id
          in: path
          required: true
          description: Unique identifier for the user
        - name: quantity
          in: query
          required: false
          description: Quantity of orders to create (default: 1)
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties: {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  items:
                    type: array
                  date:
                    type: string
                  total:
                    type: number
                required:
                  - id
                  - items
                  - date

